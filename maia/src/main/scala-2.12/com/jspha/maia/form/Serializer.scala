/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

package com.jspha.maia.form

import scala.language.higherKinds
import com.jspha.maia.{Serializer => MaiaSerializer, _}
import com.jspha.maia.serialization._
import shapeless.Lazy

/*

    Since, hopefully, these are never generated by hand
    we go ahead and represent them in "fixed" format.

 */

sealed trait Serializer[P <: SerializationParams] extends Dsl {
  type AtomK[A, As <: ArgSpec, Es <: ErrSpec, S <: Size] =
    Serializer.Atom[P, A, As, Es, S]
  type ObjK[T[_ <: Dsl], As <: ArgSpec, Es <: ErrSpec, S <: Size] =
    Serializer.Obj[P, T, As, Es, S]
}

object Serializer {
  final case class Atom[P <: SerializationParams,
                        A,
                        As <: ArgSpec,
                        Es <: ErrSpec,
                        S <: Size](as: As#Fold[Section[P, ?], Unit, Any],
                                   es: Es#Fold[Section[P, ?], Unit, Any],
                                   here: Section[P, A])

  final case class Obj[P <: SerializationParams,
                       T[_ <: Dsl],
                       As <: ArgSpec,
                       Es <: ErrSpec,
                       S <: Size](as: As#Fold[Section[P, ?], Unit, Any],
                                  es: Es#Fold[Section[P, ?], Unit, Any],
                                  here: Lazy[MaiaSerializer[P, T]])
}
